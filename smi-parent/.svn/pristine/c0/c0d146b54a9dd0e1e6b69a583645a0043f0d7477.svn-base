package com.zen.smi.dao.entities;

// Generated Aug 24, 2015 3:51:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StCaseBalanceInquiry generated by hbm2java
 */
@Entity
@Table(name = "st_case_balance_inquiry", catalog = "")
public class StCaseBalanceInquiry implements java.io.Serializable {

	private Integer stCaseBalanceEnquiryId;
	private SocialProfiles socialProfiles;
	private StStatus stStatus;
	private CmfCustomer cmfCustomer;
	private StTransactionType stTransactionType;
	private SocialMediaAccounts socialMediaAccountsBySocialAccount;
	private SocialMediaAccounts socialMediaAccountsByStSocialMediaAccountId;
	private String caseMessage;
	private String stTransactionId;
	private Date stTransactionDate;
	private String stMessageId;
	private String postId;
	private Date updatedDate;
	private String updatedBy;

	public StCaseBalanceInquiry() {
	}

	public StCaseBalanceInquiry(String stTransactionId) {
		this.stTransactionId = stTransactionId;
	}

	public StCaseBalanceInquiry(SocialProfiles socialProfiles,
			StStatus stStatus, CmfCustomer cmfCustomer,
			StTransactionType stTransactionType,
			SocialMediaAccounts socialMediaAccountsBySocialAccount,
			SocialMediaAccounts socialMediaAccountsByStSocialMediaAccountId,
			String caseMessage, String stTransactionId, Date stTransactionDate,
			String stMessageId, String postId, Date updatedDate,
			String updatedBy) {
		this.socialProfiles = socialProfiles;
		this.stStatus = stStatus;
		this.cmfCustomer = cmfCustomer;
		this.stTransactionType = stTransactionType;
		this.socialMediaAccountsBySocialAccount = socialMediaAccountsBySocialAccount;
		this.socialMediaAccountsByStSocialMediaAccountId = socialMediaAccountsByStSocialMediaAccountId;
		this.caseMessage = caseMessage;
		this.stTransactionId = stTransactionId;
		this.stTransactionDate = stTransactionDate;
		this.stMessageId = stMessageId;
		this.postId = postId;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "st_case_balance_enquiry_id", unique = true, nullable = false)
	public Integer getStCaseBalanceEnquiryId() {
		return this.stCaseBalanceEnquiryId;
	}

	public void setStCaseBalanceEnquiryId(Integer stCaseBalanceEnquiryId) {
		this.stCaseBalanceEnquiryId = stCaseBalanceEnquiryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "source_id")
	public SocialProfiles getSocialProfiles() {
		return this.socialProfiles;
	}

	public void setSocialProfiles(SocialProfiles socialProfiles) {
		this.socialProfiles = socialProfiles;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "st_status_id")
	public StStatus getStStatus() {
		return this.stStatus;
	}

	public void setStStatus(StStatus stStatus) {
		this.stStatus = stStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "st_customer_id")
	public CmfCustomer getCmfCustomer() {
		return this.cmfCustomer;
	}

	public void setCmfCustomer(CmfCustomer cmfCustomer) {
		this.cmfCustomer = cmfCustomer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "st_transaction_type")
	public StTransactionType getStTransactionType() {
		return this.stTransactionType;
	}

	public void setStTransactionType(StTransactionType stTransactionType) {
		this.stTransactionType = stTransactionType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "social_account")
	public SocialMediaAccounts getSocialMediaAccountsBySocialAccount() {
		return this.socialMediaAccountsBySocialAccount;
	}

	public void setSocialMediaAccountsBySocialAccount(
			SocialMediaAccounts socialMediaAccountsBySocialAccount) {
		this.socialMediaAccountsBySocialAccount = socialMediaAccountsBySocialAccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "st_social_media_account_id")
	public SocialMediaAccounts getSocialMediaAccountsByStSocialMediaAccountId() {
		return this.socialMediaAccountsByStSocialMediaAccountId;
	}

	public void setSocialMediaAccountsByStSocialMediaAccountId(
			SocialMediaAccounts socialMediaAccountsByStSocialMediaAccountId) {
		this.socialMediaAccountsByStSocialMediaAccountId = socialMediaAccountsByStSocialMediaAccountId;
	}

	@Column(name = "case_message", length = 65535)
	public String getCaseMessage() {
		return this.caseMessage;
	}

	public void setCaseMessage(String caseMessage) {
		this.caseMessage = caseMessage;
	}

	@Column(name = "st_transaction_id", nullable = false, length = 45)
	public String getStTransactionId() {
		return this.stTransactionId;
	}

	public void setStTransactionId(String stTransactionId) {
		this.stTransactionId = stTransactionId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "st_transaction_date", length = 19)
	public Date getStTransactionDate() {
		return this.stTransactionDate;
	}

	public void setStTransactionDate(Date stTransactionDate) {
		this.stTransactionDate = stTransactionDate;
	}

	@Column(name = "st_message_id", length = 100)
	public String getStMessageId() {
		return this.stMessageId;
	}

	public void setStMessageId(String stMessageId) {
		this.stMessageId = stMessageId;
	}

	@Column(name = "post_id", length = 45)
	public String getPostId() {
		return this.postId;
	}

	public void setPostId(String postId) {
		this.postId = postId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "updated_by", length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

}
