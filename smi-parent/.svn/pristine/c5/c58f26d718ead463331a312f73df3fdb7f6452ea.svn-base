AppServices.factory('cmfDashboardService',function($http,$q, smiGenUtil){
	
    return{
    	// Start Get total Count of Social data
		 getCaseCountDetails: function(){
		     	var deferred = $q.defer();
		   		$http.get('cmfcases/cmfCaseManagementCounts',{
		       	}).success(function(response, status, headers) {
		   		   deferred.resolve(response);
		   		   smiGenUtil.handleSuccess(response);
		   	    }).error(function() {
		           smiGenUtil.handleError(response);
			    });
		 	   return deferred.promise;
		 },// end getRules
		/* 
		 getDashboardInitData: function(requestData){
		     	var deferred = $q.defer();
		   		$http.get('cmfcases/dashboardgraph', JSON.stringify(requestData),{
		       	}).success(function(response, status, headers) {
		   		   deferred.resolve(response);
		   		   smiGenUtil.handleSuccess(response);
		   	    }).error(function() {
		           smiGenUtil.handleError(response);
			    });
		 	   return deferred.promise;
		 },// end getRules
*/		 
		 /*getDashboardInitData: function(requestData){
			 alert(JSON.stringify(requestData));
	 	 		var deferred = $q.defer();
	 	 		$http.get('cmfcases/dashboardgraph',  JSON.stringify(requestData),
	 			{headers: { 'Content-Type': 'application/json; charset=UTF-8'}}).success(function(response, status, headers) {
	 				 alert(JSON.stringify(response));
	 			deferred.resolve(response);
	 		 	smiGenUtil.handleSuccess(response);
	 	 		}).error(function(response) {
	 	 		 	smiGenUtil.handleError(response);
	 	 		});
	 	 		 return deferred.promise;
	 	 	},// End Test Rule 
	 	 	*/
	 	 	
	 	 	getDashboardInitData: function(requestData){
	 	   	 	var deferred = $q.defer();
	 	   	 	$http.post('cmfcases/dashboardgraph',  JSON.stringify(requestData),
	 	   		{headers: { 'Content-Type': 'application/json; charset=UTF-8'}}).success(function(response, status, headers) {
	 	   		deferred.resolve(response);
	 	   		smiGenUtil.handleSuccess(response);
	 	   	 	}).error(function(response) {
	 	   	 	   smiGenUtil.handleError(response);
	 	   	    });
	 	   	 		 return deferred.promise;
	 	   	 	},
    };
    
});
