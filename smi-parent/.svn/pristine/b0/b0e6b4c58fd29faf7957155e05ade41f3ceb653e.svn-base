'use strict';

/**
 * @ngdoc function
 * @name smiApp.controller:NavCtrl
 * @description # NavCtrl Controller of the smiApp
 */
angular
		.module('smiApp')
		.controller('ViewIndividualCaseDetailsTwitterController',function($scope, $stateParams, OpenfacebookCaseService, $state,$modal, $log, dialogs, $rootScope) {
			$scope.mails = [];
			$scope.isShow = true;
			$scope.image = "resources/images/random-avatar1.jpg";
					OpenfacebookCaseService.getIndividualCaseDetails($stateParams.case_id).then(function(response) {
						if (response != null) {
							if (response != null) {
								$scope.caseContent = response.data.cmfCaseBO[0].description;
								$scope.customerName = response.data.cmfCaseBO[0].cmfCustomerBO.firstName;
								$scope.createdDate = response.data.cmfCaseBO[0].created_date;
								$scope.casePriority = response.data.cmfCaseBO[0].cmfCasePriorityBO.priority_name;
								$scope.socialAccount = response.data.cmfCaseBO[0].socialMediaAccountsBO.social_media_accounts_accountname;
								$scope.caseStatus = response.data.cmfCaseBO[0].cmfCaseStatusBO.caseStatus;
								$scope.caseDetails = response.data.cmfCaseBO[0].cmfCaseHistoryBO;
							}
						}
					});
					$scope.actionsList = function(){
						$scope.isShow = false;
					};
				
					 /*This method to navigate back to Previous*/
					$scope.goOpenTwitterPage = function(){
						 $state.go('opentwittercases');
					};
					
					$scope.addAssignCase = function() {
						var modalInstance = $modal.open({
							templateUrl : 'assignCase.html',
							controller  : 'AddassignCaseTwitterController',
							resolve : {
								items : function() {
									var obj = {};
									obj.assignto = $scope.assignto;
									obj.reasons = $scope.reasons;
									obj.selectedCases = $stateParams.case_id;
									return obj;
								}
							}
						});
					}

					$scope.addAppendNote = function() {
						var modalInstance = $modal.open({
							templateUrl : 'appendNote.html',
							controller  : 'CreateAppendNoteTwitterController',
							resolve : {
								selectedCases : function() {
									var obj = {};
									obj.selectedCases = $stateParams.case_id;
									return obj;
								}
							}
						});
					};
					$scope.addGroupCase = function() {
						var modalInstance = $modal.open({
							templateUrl : 'individualGroupCase.html',
							controller  : 'individualGroupCaseTwitterController',
							resolve : {
								items : function() {
									var obj = {};
									obj.caseid = $stateParams.case_id;
									return obj;
								}
							}
						});
					};
					
					$scope.addCaseResolution = function() {
						var modalInstance = $modal.open({
							templateUrl : 'caseResolution.html',
							controller  : 'CaseResolutionTwitterController',
							resolve : {
								selectedCases : function() {
									var obj = {};
									obj.selectedCases = $stateParams.case_id;
									return obj;
								}
							}

						});
					};
					
					$scope.addNewCase = function() {
						var modalInstance = $modal.open({
							templateUrl : 'createNewCase.html',
							controller : 'CreateNewCaseTwitterController',
							
							

						});
					};
		}).controller('AddassignCaseTwitterController',function($scope, $modalInstance, $rootScope,OpenfacebookCaseService, items,dialogs) {
			$scope.getAssignedUserId = function(user) {
				$scope.user = user;
			};
			OpenfacebookCaseService.getAllUsers().then(function(response) {
						$scope.users = response.data.cmfCasesUsers;
					});
			$scope.saveAssigncase = function() {
				if($scope.assignto == null || $scope.assignto == undefined){
					dialogs.error("ERROR","please select the Assign To ",{size:'md'});
					return false;
				}
				else if ($scope.reasons == null || $scope.reasons == undefined){
					dialogs.error("ERROR","please enter the Reasons For Assigning",{size:'md'});
					return false;
			    } else {
				var requestData = {
					"user_name" : $scope.assignto,
					"reason"    : $scope.reasons,
					"cmf_case"  : []
				};
				requestData.cmf_case.push(items.selectedCases);
				OpenfacebookCaseService.saveSelectedCases(requestData).then(function(result) {
						});
				$modalInstance.close();
			}
			};
			$scope.close = function() {
				$modalInstance.dismiss('close');
			};
			
		}).controller('CreateAppendNoteTwitterController',function($scope, $modal, $state, $modalInstance, $stateParams,selectedCases, OpenfacebookCaseService,dialogs) {
					OpenfacebookCaseService.getnoteHistory($stateParams.case_id).then(function(response) {
										$scope.noteHistories = response.data.cmfCaseNoteListBO;
									});
					$scope.saveAppendNotes = function() {
						if($scope.appendnotesfb == null || $scope.appendnotesfb == undefined){
							dialogs.error("ERROR","please enter the description for Append Note",{size:'md'});
							return false;
						}
						var saveAppendNotesJSON = {
							"note_description" : $scope.appendnotesfb,
							"cmfcase" : []
						};
						saveAppendNotesJSON.cmfcase.push(selectedCases.selectedCases);
						OpenfacebookCaseService.saveAppendNotes(saveAppendNotesJSON).then(function(result) {

						});
						$modalInstance.close();
					};

					$scope.close = function() {
						$modalInstance.dismiss('close');
					};
					
		}).controller('CaseResolutionTwitterController',function($scope, $modal, $state, $modalInstance, selectedCases,OpenfacebookCaseService,dialogs) {
			$scope.saveResolveCase = function() {
				if ($scope.resolveReasons == null || $scope.resolveReasons == undefined ){
					dialogs.error("ERROR" , "please enter the reasons for Case Resolution",{size:'md'});
					return false;
				}
				var ResolveCaseJSON = {
					"note_description" : $scope.resolveReasons,
					"cmf_case" : []
				};
				ResolveCaseJSON.cmf_case.push(selectedCases.selectedCases);
				OpenfacebookCaseService.saveResolvedCase(ResolveCaseJSON).then(function(result) {

				});
				$modalInstance.close();
			};

			$scope.close = function() {
				$modalInstance.dismiss('close');
			};
		})
		.controller('CreateNewCaseTwitterController',function($scope, $modal, $state, $modalInstance,OpenfacebookCaseService,$stateParams,dialogs) {
			OpenfacebookCaseService.getPopulateData().then(function(response){
				$scope.priorities=[];
				for(var i=0;i<response.data.cmfPriorityListBO.length;i++) {
					var priority = {};
					priority.priorityId = response.data.cmfPriorityListBO[i].priority_id;
					priority.priority = response.data.cmfPriorityListBO[i].priority_name;
					$scope.priorities.push(priority);
				}
				$scope.users = [];
				for(var i=0;i<response.data.cmfUserListBO.length;i++) {
					var users = {};
					users.userId = response.data.cmfUserListBO[i].userId;
					users.userName = response.data.cmfUserListBO[i].userName;
					$scope.users.push(users);
				}
			});
			OpenfacebookCaseService.getIndividualCaseDetails($stateParams.case_id).then(function(response) {
				if (response != null) {
					if (response != null) {
						$scope.priorityId = response.data.cmfCaseBO[0].cmfCasePriorityBO.priority_id;
						$scope.socialAccountId = response.data.cmfCaseBO[0].socialMediaAccountsBO.social_media_accounts_id;
						$scope.customerId = response.data.cmfCaseBO[0].cmfCustomerBO.customerId;
						$scope.userId = response.data.cmfCaseBO[0].userBO.userId;
						$scope.categoryId = response.data.cmfCaseBO[0].cmfCasePriorityBO.priority_id;
						$scope.financialInstitutionId = response.data.cmfCaseBO[0].financialInstitutionsBO.financial_institutions_id;
						$scope.socialProfileAccountId = response.data.cmfCaseBO[0].socialProfilesBO.social_profile_accounts_id;
						$scope.categoryId = response.data.cmfCaseBO[0].cmfCaseCategoryBO.category_id;

					}
				}
			});
			$scope.saveNewCase = function() {
				if($scope.caseDescription == null || $scope.caseDescription == undefined){
					dialogs.error("ERROR","please enter the Description for New Case",{size:'md'});
					return false;
				}else if ($scope.createReasons == null  || $scope.createReasons == undefined){
					dialogs.error("ERROR","please enter the  Reasons for creating New Case ",{size:'md'});
					return false;
				}else{
				var requstData = {
						"case_id" : "",
						"socialProfilesBO" : {
							"social_profile_accounts_id" : $scope.socialProfileAccountId,
							"social_media_accounts" : []
						},
						"userBO" : {
							"userId" : $scope.userId
						},
						"cmfCaseStatusBO" : {
							"caseStatusId" : 1
						},
						"cmfCaseCategoryBO" : {
							"category_id"   : $scope.categoryId
						},
						"cmfCustomerBO" : {
							"customerId" : $scope.customerId
						},
						"cmfCasePriorityBO" : {
							"priority_id" : $scope.priorityId
						},
						"socialMediaAccountsBO" : {
							"social_media_accounts_id" : $scope.socialAccountId
						},
						"financialInstitutionsBO" : {
							"financial_institutions_id" : $scope.financialInstitutionId
						},
						"cmfCaseNotesBO" : [ {
							"noteDescription" : $scope.createReasons,
							"caseNoteCategoriesBO" : {
								"id" : 4
							}
						} ],
						"description" : $scope.caseDescription,
						"group_case_id" : "",
						"updated_by" : "Venu", // static value									
						"group_case_flag" : "No"
					};
					OpenfacebookCaseService.saveNewCase(requstData).then(function(response){
						
					});
					$modalInstance.close();
			}
			};
	$scope.close = function() {
		$modalInstance.dismiss('close');
	};
		}).controller('individualGroupCaseTwitterController',function($scope, $modal, $state, $modalInstance, $stateParams,items,OpenfacebookCaseService,dialogs) {
			account_type = 2;
			$scope.accountType = account_type.toString();
			OpenfacebookCaseService.getGroupCaseNumbers($scope.accountType).then(
					function(response) {
						$scope.groupCaseNumbers = response.data.cmfCaseBO;
					});
			
	$scope.individualCaseId = items.caseid;
	$scope.ok = function() {
		 if ($scope.reasons == null || $scope.reasons == undefined) {
			 dialogs.error("ERROR","Please Select the Reasons for Grouping",{size:'md'});					
			 return false;
	    } else {
		var requestData = {
			"group_case_id" :  $scope.caseNumber.case_id.split('_')[0],
			"reason" : $scope.reasons,
			"case_id" : $scope.individualCaseId
		};
		OpenfacebookCaseService.saveIndividualGroupCase(requestData).then(function(result) {

		});
		$modalInstance.close();
	    }
	};

	$scope.close = function() {
		$modalInstance.dismiss('close');
	};
	
	});
				
