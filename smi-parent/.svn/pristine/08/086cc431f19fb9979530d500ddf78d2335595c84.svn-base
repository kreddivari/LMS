package com.zen.smi.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zen.smi.cmf.bo.CmfCaseBO;
import com.zen.smi.cmf.bo.CmfCaseListBO;
import com.zen.smi.cmf.bo.CmfCaseManagementDashboardBO;
import com.zen.smi.cmf.bo.CmfCaseStaticDataBO;
import com.zen.smi.cmf.service.CmfCaseService;
import com.zen.smi.exception.BusinessException;

/**
 * CmfCaseController class manage Cases related data. Data from screens is
 * transferred to the controller and passed to services/dao.
 * 
 * @author tmangalapenta 
 */
@Controller
@RequestMapping("/cmfcases")
public class CmfCaseController extends BaseController {

	/**
	 * Logger for CmfCaseController class.
	 */
	private static final Logger LOGGER = Logger.getLogger(CmfCaseController.class);

	@Autowired
	public CmfCaseService cmfCaseService;

	/**
	 * This method is to get all the rules information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return RuleListBO
	 */
	
	@RequestMapping(value = "/closed", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfClosedCases(HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			List<CmfCaseBO> cmfCases = cmfCaseService.getAllCmfClosedCases();
//			RuleListBO ruleList = new RuleListBO();
//			ruleList.setRules(rules);
//			resultJson = gson.toJson(ruleList, RuleListBO.class);
//			resultJson = handleSuccess(resultJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/staticdata", method = RequestMethod.GET)
	public @ResponseBody String getCmfCaseStaticData(HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			CmfCaseStaticDataBO cmfCaseStaticData = cmfCaseService.getCmfCaseStaticData();
			resultJson = gson.toJson(cmfCaseStaticData, CmfCaseStaticDataBO.class);
			resultJson = handleSuccess(resultJson, null);
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get All CmfCase Counts information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/cmfCaseManagementCounts", method = RequestMethod.GET)
	public @ResponseBody String getCountOfCmfCaseManagement(HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			 //int userId,int faceBookAccountId,int twitterBookAccountId
			CmfCaseManagementDashboardBO cmfCaseManagementDashboardBO = cmfCaseService.getCountOfCmfCaseManagement(1,1,2);
			String cmfJson=gson.toJson(cmfCaseManagementDashboardBO,CmfCaseManagementDashboardBO.class);			
			resultJson = handleSuccess(cmfJson, null);
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/openCasesByAccountType/{account_type}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfOpenCasesByAccountType(@PathVariable("account_type") int accountTypeId,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfOpenCasesByAccountType(accountTypeId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/openCasesByCategory/{category_type}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfOpenCasesByCategory(@PathVariable("category_type") int categoryId,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfOpenCasesByCategory(categoryId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/openCasesByPriority/{priority_type}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfOpenCasesByPriority(@PathVariable("priority_type") int priorityTypeId,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfOpenCasesByPriority(priorityTypeId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/openCasesByFinancialInstitutions/{financialInstitution_type}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfOpenCasesByFinancialInstitutionsType(@PathVariable("financialInstitution_type") int financialInstitutionTypeId,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfOpenCasesByFinancialInstitutionsType(financialInstitutionTypeId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/openCasesByCriteria/{category_type}/{priority_type}/{social_media_accounts_id}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfOpenCasesByCriteria(@PathVariable("category_type") String category,@PathVariable("priority_type") String priorityType,@PathVariable("social_media_accounts_id") String socialMediaAccounts,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			Integer categoryId;
			Integer priorityTypeId;
			Integer socialMediaAccountsId;
			if(category != "" && !category.equals("") || category.equals("All")) {
				categoryId = null;
			} else {
				categoryId = Integer.parseInt(category);
			}
			if(priorityType != "" && !priorityType.equals("") || priorityType.equals("All")) {
				priorityTypeId = null;
			} else {
				priorityTypeId = Integer.parseInt(priorityType);
			}
			if(socialMediaAccounts != "" && !socialMediaAccounts.equals("") || socialMediaAccounts.equals("All")) {
				socialMediaAccountsId = null;
			} else {
				socialMediaAccountsId = Integer.parseInt(socialMediaAccounts);
			}
			
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfOpenCasesByCriteria(categoryId,priorityTypeId,socialMediaAccountsId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
	
	/**
	 * This method is to get CmfCase Static Data information which is converted to
	 * json and passed to view rules page.
	 * 
	 * @param request
	 * @param response
	 * @return CmfCaseStaticDataBO
	 */
	
	@RequestMapping(value = "/casesByCustomer/{customer_id}", method = RequestMethod.GET)
	public @ResponseBody String getAllCmfCasesByCustomer(@PathVariable("customer_id") int customerId,HttpServletRequest request,
			HttpServletResponse response) throws BusinessException {
		String resultJson = null;
		try {
			  
			List<CmfCaseBO> cmfCaseBOList = cmfCaseService.getAllCmfCasesByCustomer(customerId);
			CmfCaseListBO cmfCaseListBO = new CmfCaseListBO();
			cmfCaseListBO.setCmfCaseBO(cmfCaseBOList);
			String cmfJson=gson.toJson(cmfCaseListBO,CmfCaseListBO.class);			
			resultJson = handleSuccess(cmfJson, null);
			
		} catch (Throwable th) {
			th.printStackTrace();
			resultJson = handleOtherError(th);
		}
		return resultJson;
	}
}
