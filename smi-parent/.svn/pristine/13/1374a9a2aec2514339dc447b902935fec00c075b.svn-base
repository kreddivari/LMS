package com.zen.smi.extsys.service.impl;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.LinkedHashMap;

import com.plivo.helper.api.client.RestAPI;
import com.plivo.helper.api.response.message.MessageResponse;
import com.zen.smi.extsys.service.SMSService;

public class SMSServiceImpl implements SMSService {

	//Add from pLivo
	private final String AUTH_ID = "GMAMJG0MWRJOWJLNZIXYT";
	private final String AUTH_TOKEN = "GY2ZhMTI5YTc3OTcwMzQyZTdiMDdmOWQzMTNiMThk";
	
	public static void main(String[] args) {
		SMSServiceImpl impl = new SMSServiceImpl();
		String message = "Your account balance is Rs 100.";
		String phone = "917674934101";
		
		impl.sendSMS(message, phone);
	}
	
	public void sendSMS(String message, String phone) {
//		try {
//
//			RestAPI api = new RestAPI(AUTH_ID, AUTH_TOKEN, "v1");
//	        
//	        LinkedHashMap<String, String> parameters = new LinkedHashMap<String, String>();
//	        parameters.put("src", "917674934101"); // Sender's phone number with country code
//	        parameters.put("dst", phone); // Receiver's phone number with country code
//	        parameters.put("text", message); // Your SMS text message
//	        parameters.put("type", "sms");
//	        parameters.put("method", "POST"); // The method used to call the url
//
//	        // Send the message
//            MessageResponse msgResponse = api.sendMessage(parameters);
//            // Print the response
//            System.out.print(getFields(msgResponse));
//  		} catch (Throwable e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
	}

    // Get all the fields in the Response
    public static String getFields(Object obj) throws IllegalAccessException {
        StringBuffer buffer = new StringBuffer();
        Field[] fields = obj.getClass().getDeclaredFields();
        for (Field f : fields) {
          if (!Modifier.isStatic(f.getModifiers())) {
            f.setAccessible(true);
            Object value = f.get(obj);
            buffer.append(f.getName());
            buffer.append("=");
            buffer.append("" + value);
            buffer.append("\n");
          }
        }
        return buffer.toString();
    }


}
