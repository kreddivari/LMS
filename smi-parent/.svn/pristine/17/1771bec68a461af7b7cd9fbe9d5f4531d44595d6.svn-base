package com.zen.smi.dao.entities;
// Generated Aug 24, 2015 3:51:14 PM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * SocialMediaAccounts generated by hbm2java
 */
@Entity
@Table(name="social_media_accounts"
    ,catalog=""
    , uniqueConstraints = @UniqueConstraint(columnNames={"account_name", "account_type"}) 
)
public class SocialMediaAccounts  implements java.io.Serializable {


     private Integer id;
     private SocialProfiles socialProfiles;
     private FinancialInstitutions financialInstitutions;
     private String accountName;
     private String accountId;
     private String processStatus;
     private Date scheduledDate;
     private Integer processPercentage;
     private Date createdDate;
     private Set<SocialDataProcess> socialDataProcesses = new HashSet<SocialDataProcess>(0);
     private Set<CmfCase> cmfCases = new HashSet<CmfCase>(0);
     private Set<StCaseTransaction> stCaseTransactionsForStSocialMediaAccountId = new HashSet<StCaseTransaction>(0);
     private Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForSocialAccount = new HashSet<StCaseBalanceInquiry>(0);
     private Set<StCaseTransaction> stCaseTransactionsForSocialAccount = new HashSet<StCaseTransaction>(0);
     private Set<SocialDataAnalysis> socialDataAnalysises = new HashSet<SocialDataAnalysis>(0);
     private Set<StCase> stCases = new HashSet<StCase>(0);
     private Set<SocialMediaAccountPosts> socialMediaAccountPostses = new HashSet<SocialMediaAccountPosts>(0);
     private Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForStSocialMediaAccountId = new HashSet<StCaseBalanceInquiry>(0);

    public SocialMediaAccounts() {
    }

	
    public SocialMediaAccounts(String accountName) {
        this.accountName = accountName;
    }
    public SocialMediaAccounts(SocialProfiles socialProfiles, FinancialInstitutions financialInstitutions, String accountName, String accountId, String processStatus, Date scheduledDate, Integer processPercentage, Date createdDate, Set<SocialDataProcess> socialDataProcesses, Set<CmfCase> cmfCases, Set<StCaseTransaction> stCaseTransactionsForStSocialMediaAccountId, Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForSocialAccount, Set<StCaseTransaction> stCaseTransactionsForSocialAccount, Set<SocialDataAnalysis> socialDataAnalysises, Set<StCase> stCases, Set<SocialMediaAccountPosts> socialMediaAccountPostses, Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForStSocialMediaAccountId) {
       this.socialProfiles = socialProfiles;
       this.financialInstitutions = financialInstitutions;
       this.accountName = accountName;
       this.accountId = accountId;
       this.processStatus = processStatus;
       this.scheduledDate = scheduledDate;
       this.processPercentage = processPercentage;
       this.createdDate = createdDate;
       this.socialDataProcesses = socialDataProcesses;
       this.cmfCases = cmfCases;
       this.stCaseTransactionsForStSocialMediaAccountId = stCaseTransactionsForStSocialMediaAccountId;
       this.stCaseBalanceInquiriesForSocialAccount = stCaseBalanceInquiriesForSocialAccount;
       this.stCaseTransactionsForSocialAccount = stCaseTransactionsForSocialAccount;
       this.socialDataAnalysises = socialDataAnalysises;
       this.stCases = stCases;
       this.socialMediaAccountPostses = socialMediaAccountPostses;
       this.stCaseBalanceInquiriesForStSocialMediaAccountId = stCaseBalanceInquiriesForStSocialMediaAccountId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="account_type")
    public SocialProfiles getSocialProfiles() {
        return this.socialProfiles;
    }
    
    public void setSocialProfiles(SocialProfiles socialProfiles) {
        this.socialProfiles = socialProfiles;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="financial_institution_id")
    public FinancialInstitutions getFinancialInstitutions() {
        return this.financialInstitutions;
    }
    
    public void setFinancialInstitutions(FinancialInstitutions financialInstitutions) {
        this.financialInstitutions = financialInstitutions;
    }

    
    @Column(name="account_name", nullable=false, length=45)
    public String getAccountName() {
        return this.accountName;
    }
    
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    
    @Column(name="account_id", length=65535)
    public String getAccountId() {
        return this.accountId;
    }
    
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    
    @Column(name="process_status", length=100)
    public String getProcessStatus() {
        return this.processStatus;
    }
    
    public void setProcessStatus(String processStatus) {
        this.processStatus = processStatus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="scheduled_date", length=19)
    public Date getScheduledDate() {
        return this.scheduledDate;
    }
    
    public void setScheduledDate(Date scheduledDate) {
        this.scheduledDate = scheduledDate;
    }

    
    @Column(name="process_percentage")
    public Integer getProcessPercentage() {
        return this.processPercentage;
    }
    
    public void setProcessPercentage(Integer processPercentage) {
        this.processPercentage = processPercentage;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_date", length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccounts")
    public Set<SocialDataProcess> getSocialDataProcesses() {
        return this.socialDataProcesses;
    }
    
    public void setSocialDataProcesses(Set<SocialDataProcess> socialDataProcesses) {
        this.socialDataProcesses = socialDataProcesses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccounts")
    public Set<CmfCase> getCmfCases() {
        return this.cmfCases;
    }
    
    public void setCmfCases(Set<CmfCase> cmfCases) {
        this.cmfCases = cmfCases;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccountsByStSocialMediaAccountId")
    public Set<StCaseTransaction> getStCaseTransactionsForStSocialMediaAccountId() {
        return this.stCaseTransactionsForStSocialMediaAccountId;
    }
    
    public void setStCaseTransactionsForStSocialMediaAccountId(Set<StCaseTransaction> stCaseTransactionsForStSocialMediaAccountId) {
        this.stCaseTransactionsForStSocialMediaAccountId = stCaseTransactionsForStSocialMediaAccountId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccountsBySocialAccount")
    public Set<StCaseBalanceInquiry> getStCaseBalanceInquiriesForSocialAccount() {
        return this.stCaseBalanceInquiriesForSocialAccount;
    }
    
    public void setStCaseBalanceInquiriesForSocialAccount(Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForSocialAccount) {
        this.stCaseBalanceInquiriesForSocialAccount = stCaseBalanceInquiriesForSocialAccount;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccountsBySocialAccount")
    public Set<StCaseTransaction> getStCaseTransactionsForSocialAccount() {
        return this.stCaseTransactionsForSocialAccount;
    }
    
    public void setStCaseTransactionsForSocialAccount(Set<StCaseTransaction> stCaseTransactionsForSocialAccount) {
        this.stCaseTransactionsForSocialAccount = stCaseTransactionsForSocialAccount;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccounts")
    public Set<SocialDataAnalysis> getSocialDataAnalysises() {
        return this.socialDataAnalysises;
    }
    
    public void setSocialDataAnalysises(Set<SocialDataAnalysis> socialDataAnalysises) {
        this.socialDataAnalysises = socialDataAnalysises;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccounts")
    public Set<StCase> getStCases() {
        return this.stCases;
    }
    
    public void setStCases(Set<StCase> stCases) {
        this.stCases = stCases;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccounts")
    public Set<SocialMediaAccountPosts> getSocialMediaAccountPostses() {
        return this.socialMediaAccountPostses;
    }
    
    public void setSocialMediaAccountPostses(Set<SocialMediaAccountPosts> socialMediaAccountPostses) {
        this.socialMediaAccountPostses = socialMediaAccountPostses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialMediaAccountsByStSocialMediaAccountId")
    public Set<StCaseBalanceInquiry> getStCaseBalanceInquiriesForStSocialMediaAccountId() {
        return this.stCaseBalanceInquiriesForStSocialMediaAccountId;
    }
    
    public void setStCaseBalanceInquiriesForStSocialMediaAccountId(Set<StCaseBalanceInquiry> stCaseBalanceInquiriesForStSocialMediaAccountId) {
        this.stCaseBalanceInquiriesForStSocialMediaAccountId = stCaseBalanceInquiriesForStSocialMediaAccountId;
    }




}


