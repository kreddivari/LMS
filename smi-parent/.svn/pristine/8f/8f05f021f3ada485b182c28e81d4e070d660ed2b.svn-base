package com.zen.smi.dao.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.criterion.Restrictions;
import org.hibernate.criterion.SimpleExpression;

import com.zen.smi.dao.SocialMediaAccountsDAO;
import com.zen.smi.dao.entities.SocialMediaAccounts;
import com.zen.smi.dao.exception.GenericDAOException;


public class SocialMediaAccountsDAOImpl extends BaseDAOImpl<SocialMediaAccounts, Serializable> implements SocialMediaAccountsDAO  {

	public SocialMediaAccountsDAOImpl() {
			super(SocialMediaAccounts.class);
		}

	
	/**To get Social Media Accounts
	 * @return List<SocialMediaAccounts>
	 * @throws GenericDAOException
	 */
	public  List<SocialMediaAccounts> getSocialMediaAccounts() throws GenericDAOException {
			return retrieveAll();
	}

	public List<SocialMediaAccounts> getSocialMediaAccountsByAccountType(
			int accountTypeId) throws GenericDAOException {
		List<SimpleExpression> expressionList = new ArrayList<SimpleExpression>();
		expressionList.add(Restrictions.eq("socialProfiles.profileId", accountTypeId));
		
		return search(expressionList, null);
	}


	public List<SocialMediaAccounts> getSocialMediaAccountsByFinanceId(int id)
			throws GenericDAOException {
		List<SimpleExpression> expressionList = new ArrayList<SimpleExpression>();
		expressionList.add(Restrictions.eq("financialInstitutions.id", id));
		
		return search(expressionList, null);
	}


	public SocialMediaAccounts getSocialMediaAccountsByCmfCase(String caseId)
			throws GenericDAOException {
		String query = "FROM SocialMediaAccounts as sma INNER  JOIN FETCH  sma.cmfCases as cc WHERE cc.caseId="+caseId;
		  return load(query).get(0);
	}

}



