package com.zen.smi.dao.entities;

// Generated Jun 26, 2015 12:38:54 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CmfCase generated by hbm2java
 */
@Entity
@Table(name = "cmf_case", catalog = "smi")
public class CmfCase implements java.io.Serializable {

	private String caseId;
	private SocialProfiles socialProfiles;
	private Users users;
	private CmfCaseCategory cmfCaseCategory;
	private CmfCaseStatus cmfCaseStatus;
	private CmfCustomer cmfCustomer;
	private CmfCasePriority cmfCasePriority;
	private SocialMediaAccounts socialMediaAccounts;
	private FinancialInstitutions financialInstitutions;
	private String name;
	private String description;
	private String groupCaseId;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;
	private String groupCaseFlag;
	private Set<CmfCaseNote> cmfCaseNotes = new HashSet<CmfCaseNote>(0);
	private Set<CmfCaseHistory> cmfCaseHistories = new HashSet<CmfCaseHistory>(
			0);

	public CmfCase() {
	}

	public CmfCase(String caseId, String groupCaseFlag) {
		this.caseId = caseId;
		this.groupCaseFlag = groupCaseFlag;
	}

	public CmfCase(String caseId, SocialProfiles socialProfiles, Users users,
			CmfCaseCategory cmfCaseCategory, CmfCaseStatus cmfCaseStatus,
			CmfCustomer cmfCustomer, CmfCasePriority cmfCasePriority,
			SocialMediaAccounts socialMediaAccounts,
			FinancialInstitutions financialInstitutions, String name,
			String description, String groupCaseId, String updatedBy,
			Date createdDate, Date updatedDate, String groupCaseFlag,
			Set<CmfCaseNote> cmfCaseNotes, Set<CmfCaseHistory> cmfCaseHistories) {
		this.caseId = caseId;
		this.socialProfiles = socialProfiles;
		this.users = users;
		this.cmfCaseCategory = cmfCaseCategory;
		this.cmfCaseStatus = cmfCaseStatus;
		this.cmfCustomer = cmfCustomer;
		this.cmfCasePriority = cmfCasePriority;
		this.socialMediaAccounts = socialMediaAccounts;
		this.financialInstitutions = financialInstitutions;
		this.name = name;
		this.description = description;
		this.groupCaseId = groupCaseId;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.groupCaseFlag = groupCaseFlag;
		this.cmfCaseNotes = cmfCaseNotes;
		this.cmfCaseHistories = cmfCaseHistories;
	}

	@Id
	@Column(name = "case_id", unique = true, nullable = false, length = 15)
	public String getCaseId() {
		return this.caseId;
	}

	public void setCaseId(String caseId) {
		this.caseId = caseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "source_id")
	public SocialProfiles getSocialProfiles() {
		return this.socialProfiles;
	}

	public void setSocialProfiles(SocialProfiles socialProfiles) {
		this.socialProfiles = socialProfiles;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assign_to")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "case_category")
	public CmfCaseCategory getCmfCaseCategory() {
		return this.cmfCaseCategory;
	}

	public void setCmfCaseCategory(CmfCaseCategory cmfCaseCategory) {
		this.cmfCaseCategory = cmfCaseCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "current_status")
	public CmfCaseStatus getCmfCaseStatus() {
		return this.cmfCaseStatus;
	}

	public void setCmfCaseStatus(CmfCaseStatus cmfCaseStatus) {
		this.cmfCaseStatus = cmfCaseStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public CmfCustomer getCmfCustomer() {
		return this.cmfCustomer;
	}

	public void setCmfCustomer(CmfCustomer cmfCustomer) {
		this.cmfCustomer = cmfCustomer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "priority")
	public CmfCasePriority getCmfCasePriority() {
		return this.cmfCasePriority;
	}

	public void setCmfCasePriority(CmfCasePriority cmfCasePriority) {
		this.cmfCasePriority = cmfCasePriority;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "social_account")
	public SocialMediaAccounts getSocialMediaAccounts() {
		return this.socialMediaAccounts;
	}

	public void setSocialMediaAccounts(SocialMediaAccounts socialMediaAccounts) {
		this.socialMediaAccounts = socialMediaAccounts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "financial_institutions_id")
	public FinancialInstitutions getFinancialInstitutions() {
		return this.financialInstitutions;
	}

	public void setFinancialInstitutions(
			FinancialInstitutions financialInstitutions) {
		this.financialInstitutions = financialInstitutions;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "group_case_id", length = 15)
	public String getGroupCaseId() {
		return this.groupCaseId;
	}

	public void setGroupCaseId(String groupCaseId) {
		this.groupCaseId = groupCaseId;
	}

	@Column(name = "updated_by", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "group_case_flag", nullable = false, length = 45)
	public String getGroupCaseFlag() {
		return this.groupCaseFlag;
	}

	public void setGroupCaseFlag(String groupCaseFlag) {
		this.groupCaseFlag = groupCaseFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cmfCase")
	public Set<CmfCaseNote> getCmfCaseNotes() {
		return this.cmfCaseNotes;
	}

	public void setCmfCaseNotes(Set<CmfCaseNote> cmfCaseNotes) {
		this.cmfCaseNotes = cmfCaseNotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cmfCase")
	public Set<CmfCaseHistory> getCmfCaseHistories() {
		return this.cmfCaseHistories;
	}

	public void setCmfCaseHistories(Set<CmfCaseHistory> cmfCaseHistories) {
		this.cmfCaseHistories = cmfCaseHistories;
	}

}
