angular
		.module('smiApp')
		.controller('EditPostsController',function($scope, $rootScope, dialogs, fileReader, $timeout,$modal, $filter, smiGenUtil,socialMediaAccountsServices, $stateParams,$state) {
					$scope.isShowCalendar = true.toString();
					$scope.facebookAccount = [];
					$scope.twitterAccount = [];
					$scope.facebookAccountarr = [];
					$scope.twitterAccountarr = [];
					$scope.selectedIds = [];
					$scope.accounts = [];
					$scope.postOptions = [ {id : 1,name : 'Post Now'},
					                       {id : 2,name : 'Post Later'}];
					$rootScope.initializeEditPostController = function() {
						if ($stateParams.post_id != null && $stateParams.post_id != 0) {
							socialMediaAccountsServices.getPostDetails($stateParams.post_id).then(function(response) {
												$scope.postTitle = response.data.text;
												$scope.imageSrc = "resources/ext-data/"+ response.data.imageName;
												$scope.parent.currentDate = $filter('date')(new Date(response.data.createdDate),'yyyy-MM-dd');
												// $scope.id = 2;
												$scope.imageName = response.data.imageName;
												$scope.shortTime = new Date(response.data.createdDate);
												$scope.selectedIds = response.data.account;
												$scope.status = response.data.status;
												$scope.accounts = $scope.selectedIds;
												for ( var i = 0; i < $scope.selectedIds.length; i++) {
													if ($scope.selectedIds[i].account_type == "FACEBOOK") {
														$scope.facebookAccountarr.push($scope.selectedIds[i]);
													} else if ($scope.selectedIds[i].account_type == "TWITTER") {
														$scope.twitterAccountarr.push($scope.selectedIds[i]);
													}
												}
											});
							socialMediaAccountsServices.getSocialMediaAccounts(2).then(function(response) {
												var facebookResponce = [];
												var twitterResponce = [];
												for ( var i = 0; i < response.data.social_media_accounts.length; i++) {
													if (response.data.social_media_accounts[i].social_profiles.social_profile_accounts_type == "FACEBOOK") {
														facebookResponce.push(response.data.social_media_accounts[i]);
													} else if (response.data.social_media_accounts[i].social_profiles.social_profile_accounts_type == "TWITTER") {
														twitterResponce.push(response.data.social_media_accounts[i]);
													}
												}
												if ($scope.facebookAccountarr.length > 0) {
													for ( var k = 0; k < facebookResponce.length; k++) {
														var facebookObj = facebookResponce[k];
														for ( var m = 0; m < $scope.facebookAccountarr.length; m++) {
															var selectedObj = $scope.facebookAccountarr[m];
															if (facebookObj.social_media_accounts_id == selectedObj.account_id) {
																facebookObj.ticked = true;
																$scope.facebookAccount.push(facebookObj);
																break;
															} else {
																$scope.facebookAccount.push(facebookObj);
																break;
															}
														}
													}
												} else {
													$scope.facebookAccount = facebookResponce;
												}
												if ($scope.twitterAccountarr.length > 0) {
													for ( var i = 0; i < twitterResponce.length; i++) {
														var twitterObj = twitterResponce[i];
														for ( var j = 0; j < $scope.twitterAccountarr.length; j++) {
															var selectedObj = $scope.twitterAccountarr[j];
															if (twitterObj.social_media_accounts_id == selectedObj.account_id) {
																twitterObj.ticked = true;
																$scope.twitterAccount.push(twitterObj);
																break;
															} else {
																$scope.twitterAccount.push(twitterObj);
																break;
															}
														}
													}
												} else {
													$scope.twitterAccount = twitterResponce;
												}

											});

							$scope.getFacebookAccountIds = function(data) {
								if (data.ticked) {
									var account = {
										"account_id" : data.social_media_accounts_id,
										"account_type" : data.social_profiles.social_profile_accounts_type
									};
									$scope.accounts.push(account);
								} else {
									for ( var i = 0; i < $scope.accounts.length; i++) {
										if ($scope.accounts[i].account_id == data.social_media_accounts_id) {
											$scope.accounts.splice(i, 1);
											break;
										}
									}
								}
							};

							$scope.getTwitterAccountIds = function(data) {
								if (data.ticked) {
									var account = {
										"account_id" : data.social_media_accounts_id,
										"account_type" : data.social_profiles.social_profile_accounts_type
									};
									$scope.accounts.push(account);
								} else {
									for ( var i = 0; i < $scope.accounts.length; i++) {
										if ($scope.accounts[i].account_id == data.social_media_accounts_id) {
											$scope.accounts.splice(i, 1);
											break;
										}
									}
								}
							};
						}
					};

					$scope.mytime = new Date();
					$scope.hours = $scope.mytime.getMinutes();
					$scope.minutes = $scope.mytime.getHours();
					$scope.updateFilePath = function() {
						fileReader.readAsDataUrl($scope.selectedFiles[0],$scope).then(function(result) {
							$scope.imageSrc = result;
						});
					};

					$scope.start = new Date();
					$scope.shortTime = new Date();
					$scope.minStartDate = 0; // fixed date
					$scope.maxStartDate = $scope.end; // init value
					$scope.minEndDate = $scope.start; // init value
					$scope.maxEndDate = $scope.end; // fixed date same as// $scope.maxStartDate init // value
					$scope.parent = {
						currentDate : $filter('date')(new Date(), 'yyyy-MM-dd')
					};
					$scope.$watch('start', function(v) {
						$scope.minEndDate = v;
					});
					$scope.$watch('end', function(v) {
						$scope.maxStartDate = v;
					});

					$scope.openEnd = function() {

						$timeout(function() {
							$scope.endOpened = true;
						});

					};

					$scope.dateOptions = {
						'year-format' : "'yy'",
						'starting-day' : 1
					};
					$scope.start = "";
					$scope.getOption = function(id) {
						if (id != null) {
							if (id == 2) {
								$scope.isShowCalendar = true.toString();
							} else if (id == 1) {
								$scope.isShowCalendar = false;
							}
							;
						} else {
							$scope.isShowCalendar = false;
						}
					};
					$scope.updatePost = function() {
						$scope.postTime = $filter('date')($scope.shortTime,'HH:mm');
						if ($scope.isShowCalendar) {
							$scope.date = $scope.parent.currentDate;
							$scope.date = $filter('date')($scope.date,'yyyy-MM-dd');
							var parts = $scope.postTime.split(':');
							$scope.date = smiGenUtil.updateDateHHmm(smiGenUtil.getDateFromYYYYMMDD($scope.date),parts[0], parts[1]);
						} else {
							$scope.date = new Date();
						}
						var modalInstance = $modal.open({
									templateUrl : 'postChannel.html',
									controller : 'EditPostChannelController',
									resolve : {
										items : function() {
											var obj = {};
											obj.id = $stateParams.post_id;
											obj.postTitle = $scope.postTitle;
											obj.imageSrc = $scope.imageSrc;
											obj.date = $scope.date;
											obj.channel = $scope.channel;
											obj.accounts = $scope.accounts;
											if ($scope.selectedFiles != undefined) {
												obj.imageFile = $scope.selectedFiles[0];
											} else {
												obj.imageFile = null;
												obj.imageName = $scope.imageName;
											}
											return obj;
										}
									}
								});
						if ($scope.postTitle == null|| $scope.postTitle == undefined) {
							dialogs.error("Error !", "Please Enter comments.");
							return false;
						} else if ($scope.postTitle != null && $scope.postTitle.length > 500) {
							dialogs.error("Error !","post should be maximum 500 characters.");
							return false;
						}
					};
					
					$scope.getAllPostsPage = function() {
						$state.go('allposts');
					};
				}).controller('EditPostChannelController',function($scope, $modalInstance, $rootScope, $filter, items,socialMediaAccountsServices,$state) {
					$scope.Title = "Post";
					$scope.comments = items.postTitle;
					$scope.imagePreview = items.imageSrc;
					$scope.date = items.date;
					$scope.displayDt = $filter('date')($scope.date,'dd MMM yyyy HH:mm');
					$scope.accounts = items.accounts;
					if (items.imageFile != null) {
						$scope.imageFile = items.imageFile;
						$scope.fileName = items.imageFile.name;
						$scope.extn = $scope.fileName.split(".").pop();
					} else {
						$scope.fileName = items.imageName;
					}
					$scope.ok = function() {
						var postData = {
							"id" : items.id,
							"text" : $scope.comments,
							"imageName" : $scope.fileName,
							"createdDateString" : $scope.date.getTime(),
							"extension" : $scope.extn,
							"account" : $scope.accounts
						};
						if (items.imageFile != null) {
							socialMediaAccountsServices.updatePost($scope.imageFile, postData).then(function(response) {
								$state.go('allposts');
									});
						} else {
							socialMediaAccountsServices.updatePostWithOutFile(postData).then(function(response) {
								$state.go('allposts');
							});
						}
						$modalInstance.close();
					};
					$scope.cancel = function() {
						$modalInstance.dismiss('cancel');
					};
				});
