package com.zen.smi.dao.entities;

// Generated Jun 16, 2015 6:15:50 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * CmfCaseNote generated by hbm2java
 */
@Entity
@Table(name = "cmf_case_note", catalog = "smi")
public class CmfCaseNote implements java.io.Serializable {

	private Integer noteId;
	private CmfCaseNoteRef cmfCaseNoteRef;
	private String noteDescription;
	private Integer parentNoteId;
	private String createdBy;
	private String updatedBy;
	private Date createdDate;
	private Date updatedDate;
	private CmfCaseNote childernNote;
	
	public CmfCaseNote() {
	}

	public CmfCaseNote(CmfCaseNoteRef cmfCaseNoteRef) {
		this.cmfCaseNoteRef = cmfCaseNoteRef;
	}

	public CmfCaseNote(CmfCaseNoteRef cmfCaseNoteRef, String noteDescription,
			Integer parentNoteId, String createdBy, String updatedBy,
			Date createdDate, Date updatedDate) {
		this.cmfCaseNoteRef = cmfCaseNoteRef;
		this.noteDescription = noteDescription;
		this.parentNoteId = parentNoteId;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "cmfCaseNoteRef"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "note_id", unique = true, nullable = false)
	public Integer getNoteId() {
		return this.noteId;
	}

	public void setNoteId(Integer noteId) {
		this.noteId = noteId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public CmfCaseNoteRef getCmfCaseNoteRef() {
		return this.cmfCaseNoteRef;
	}

	public void setCmfCaseNoteRef(CmfCaseNoteRef cmfCaseNoteRef) {
		this.cmfCaseNoteRef = cmfCaseNoteRef;
	}

	@Column(name = "note_description", length = 500)
	public String getNoteDescription() {
		return this.noteDescription;
	}

	public void setNoteDescription(String noteDescription) {
		this.noteDescription = noteDescription;
	}

	@Column(name = "parent_note_id")
	public Integer getParentNoteId() {
		return this.parentNoteId;
	}

	public void setParentNoteId(Integer parentNoteId) {
		this.parentNoteId = parentNoteId;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	/**
	 * @return the childernNote
	 */
	@Transient
	public CmfCaseNote getChildernNote() {
		return childernNote;
	}

	/**
	 * @param childernNote the childernNote to set
	 */
	public void setChildernNote(CmfCaseNote childernNote) {
		this.childernNote = childernNote;
	}

}
