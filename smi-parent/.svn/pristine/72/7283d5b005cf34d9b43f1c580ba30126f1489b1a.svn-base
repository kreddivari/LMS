package com.zen.smi.service.impl;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.log4j.Logger;
import org.quartz.JobBuilder;
import org.quartz.JobDetail;
import org.quartz.JobKey;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
import org.quartz.SimpleScheduleBuilder;
import org.quartz.SimpleTrigger;
import org.quartz.Trigger;
import org.quartz.TriggerBuilder;
import org.quartz.TriggerKey;
import org.quartz.impl.matchers.GroupMatcher;

import com.zen.smi.dao.entities.ScheduleJobs;
import com.zen.smi.dao.exception.GenericDAOException;
import com.zen.smi.dao.impl.ScheduleJobsDAOImpl;
import com.zen.smi.service.SMISchedulerService;
import com.zen.smi.service.helper.SMIJob;
import com.zen.smi.service.helper.SchedulerHelper;

public class SMISchedulerServiceImpl extends BaseService implements
		SMISchedulerService {
	private static final Logger LOGGER = Logger
			.getLogger(SMISchedulerServiceImpl.class);

	// SchedulerHelper schedulerHelper;
	JobDetail job;
	SimpleTrigger simpleTrigger;
	Scheduler scheduler;
	Trigger trigger;
	private boolean deleted = false;
	SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

	public void addJobToScheduler(String jobId, String date, Class jobImplClass)
			throws SchedulerException {
		// TODO Auto-generated method stub save
		LOGGER.debug("Starts addJobToScheduler....");
		ScheduleJobs scheduleJobs = new ScheduleJobs();

		if (null != jobId && !"".equals(jobId)) {
			scheduleJobs.setJobParantId(Integer.parseInt(jobId));
		}
		scheduleJobs.setJobName("FB_TW_SCHEDULER_JOB_" + jobId);
		scheduleJobs.setJobStatus("");
		scheduleJobs.setJobScheduleDateTime(formatDate(date));
		scheduleJobs.setCreateDate(new Date());
		scheduleJobs.setLstUpdtDtm(new Date());

		try {
			com.zen.smi.dao.ScheduleJobsDAO schldoa = new ScheduleJobsDAOImpl();
			schldoa.saveOrUpdate(scheduleJobs);
			// getScheduleJobsDAO().saveOrUpdate(scheduleJobs);
			job = JobBuilder.newJob(jobImplClass).withIdentity(jobId, "SMI")
					.build();
			trigger = TriggerBuilder.newTrigger()

			.withIdentity(jobId, "SMI")

			.startAt(scheduleJobs.getJobScheduleDateTime()).build();

			scheduler.scheduleJob(job, trigger);

		} catch (GenericDAOException e) {
			// TODO Auto-generated catch block
			// e.printStackTrace();
			LOGGER.debug("Exception addJobToScheduler...." + e.getMessage());
		}
		LOGGER.debug("END addJobToScheduler....");
	}

	public void deleteJobFromScheduler(String jobId, String date)
			throws SchedulerException {
		// TODO Auto-generated method stub update
		LOGGER.debug("Starts deleteJobFromScheduler....");
		ScheduleJobs scheduleJobs = new ScheduleJobs();
		if (null != jobId && !"".equals(jobId)) {
			scheduleJobs.setJobParantId(Integer.parseInt(jobId));
		}

		try {
			com.zen.smi.dao.ScheduleJobsDAO schldoa = new ScheduleJobsDAOImpl();
			if (null != jobId && !"".equals(jobId)) {
				scheduleJobs = schldoa.getJobsById(Integer.parseInt(jobId));
				schldoa.delete(scheduleJobs);
			}

			deleted = scheduler.deleteJob(new JobKey(jobId, "SMI"));

			if (!deleted) {
				LOGGER.debug("Quartz failed to delete the job!" + jobId
						+ ". Job not found");
			} else {

				LOGGER.debug("Quartz successfully  deleteD the job!" + jobId);

			}

		} catch (GenericDAOException e) {
			// TODO Auto-generated catch block
			LOGGER.debug("Exception deleteJobFromScheduler...."
					+ e.getMessage());
		}
		LOGGER.debug("END deleteJobFromScheduler....");
	}

	public void updateJobToScheduler(String jobId, String date)
			throws SchedulerException {
		// TODO Auto-generated method stub
		LOGGER.debug("Starts updateJobToScheduler....");
		ScheduleJobs scheduleJobs = new ScheduleJobs();

		try {
			com.zen.smi.dao.ScheduleJobsDAO schldoa = new ScheduleJobsDAOImpl();

			if (null != jobId && !"".equals(jobId)) {

				scheduleJobs = schldoa.getJobsById(Integer.parseInt(jobId));
				if (null != scheduleJobs) {
					scheduleJobs.setJobScheduleDateTime(formatDate(date));
					schldoa.saveOrUpdate(scheduleJobs);
					// getScheduleJobsDAO().saveOrUpdate(scheduleJobs);

				}

				if (scheduler.checkExists(new JobKey(jobId, "SMI"))) {
					LOGGER.info("Rescheduling the Job");

					Trigger oldTrigger = scheduler.getTrigger(new TriggerKey(
							jobId, "SMI"));

					Trigger newTrigger = TriggerBuilder.newTrigger()

					.withIdentity(jobId, "SMI")

					.startAt(scheduleJobs.getJobScheduleDateTime()).build();

					scheduler.rescheduleJob(oldTrigger.getKey(), newTrigger);

					/*
					 * deleted = scheduler.deleteJob(new JobKey(jobId, "SMI"));
					 * 
					 * if (!deleted) {
					 * LOGGER.debug("Quartz failed to delete the job!" + jobId +
					 * ". Job not found"); } else {
					 * 
					 * LOGGER.debug("Quartz successfully  deleteD the job!" +
					 * jobId ); job = JobBuilder.newJob(SMIJob.class)
					 * .withIdentity(jobId, "SMI").build(); trigger =
					 * TriggerBuilder.newTrigger() .withIdentity(jobId, "SMI")
					 * .startAt(new Date()).build(); Trigger trigger1 =
					 * TriggerBuilder.newTrigger()
					 * 
					 * .withIdentity(jobId, "SMI")
					 * 
					 * .startAt(scheduleJobs.getJobScheduleDateTime()).build();
					 * scheduler.scheduleJob(job, trigger1); }
					 */

				}
				
				 //List all quartz jobs 
				for (String groupName :
				  scheduler.getJobGroupNames()) {
					for (JobKey jobKey :
				  scheduler.getJobKeys(
				  GroupMatcher.jobGroupEquals(groupName))) { String jobName =
				  jobKey.getName(); String jobGroup = jobKey.getGroup();
				  
				  List triggers = (List) scheduler.getTriggersOfJob(jobKey); //
				  //Date nextFireTime = triggers.get(0).getNextFireTime();
				  System.out.println("Job : " + jobName + ", Group : " +
				  jobGroup + ", Next execution time : " + triggers.get(0)); } }
				 
			}

		} catch (GenericDAOException e) {
			// TODO Auto-generated catch block
			// e.printStackTrace();
			LOGGER.debug("END updateJobToScheduler...." + e.getMessage());
		}
		LOGGER.debug("END updateJobToScheduler....");
	}

	public void initializeJobs() throws SchedulerException {
		// TODO Auto-generated method stub
		LOGGER.debug("Starts initializbs....");
		scheduler = SchedulerHelper.getScheduler();

		List<ScheduleJobs> scheduleJobslist = null;
		try {
			com.zen.smi.dao.ScheduleJobsDAO schldoa = new ScheduleJobsDAOImpl();

			scheduleJobslist = schldoa.load("from ScheduleJobs  ");
			// getScheduleJobsDAO().load("from ScheduleJobs");
			for (ScheduleJobs scheduleJob : scheduleJobslist) {

				job = JobBuilder
						.newJob(SMIJob.class)
						.withIdentity(scheduleJob.getJobParantId().toString(),
								"SMI").build();
				trigger = TriggerBuilder.newTrigger()

				.withIdentity(scheduleJob.getJobParantId().toString(), "SMI")

				.startAt(scheduleJob.getJobScheduleDateTime()).build();

				scheduler.scheduleJob(job, trigger);

			}
			/*
			 * //List all quartz jobs for (String groupName :
			 * scheduler.getJobGroupNames()) { for (JobKey jobKey :
			 * scheduler.getJobKeys( GroupMatcher.jobGroupEquals(groupName))) {
			 * String jobName = jobKey.getName(); String jobGroup =
			 * jobKey.getGroup();
			 * 
			 * List triggers = (List) scheduler.getTriggersOfJob(jobKey); //
			 * Date nextFireTime = triggers.get(0).getNextFireTime();
			 * System.out.println("Job : " + jobName + ", Group : " + jobGroup +
			 * ", Next execution time : " + triggers.get(0)); } }
			 */
		} catch (Exception e) {
			// e.printStackTrace();
			LOGGER.debug("Exception initializeJobs...." + e.getMessage());
		}
		LOGGER.debug("END initializeJobs....");

	}

	public Date formatDate(String date) {
		Date fdate = null;
		if (null != date && !"".equals(date)) {

			try {
				fdate = formatter.parse(date);
			} catch (ParseException e) {
				// TODO Auto-generated catch block

				LOGGER.debug("Exception formatDate...." + e.getMessage());
			}

		}
		return fdate;
	}

	public static void main(String args[]) {

		SMISchedulerServiceImpl schedulerServiceImpl = new SMISchedulerServiceImpl();
		try {
			schedulerServiceImpl.initializeJobs();
			// schedulerServiceImpl.addJobToScheduler("15",
			// "21-08-2015 11:02:25");
			// schedulerServiceImpl.addJobToScheduler("16",
			// "21-08-2015 11:03:25");
			schedulerServiceImpl.updateJobToScheduler("16",
					"2015-08-21 19:09:10");
		} catch (SchedulerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
