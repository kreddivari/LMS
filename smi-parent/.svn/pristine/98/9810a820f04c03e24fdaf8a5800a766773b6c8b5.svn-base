'use strict';

/**
 * @author yunus
 * @ngdoc function
 * @name smiApp.controller:NavCtrl
 * @description
 * # NavCtrl
 * Controller of the smiApp
 */
angular.module('smiApp')
  .controller('BulkTestRulesController', function ($scope, $rootScope,rulesServices, $modal, $log, dialogs, $state,fileReader) {
	  $scope.rulesData = {};
	  $scope.appData = {};
	  $scope.formulaData = [];
	  $scope.selectedFamilyId = null;
	  $scope.selectedRuleGroupId = null;
	  isRuleApplied =true;
	  isNotRuleApplied = false;
	  /**
	   * this method is used to initialize the Application dropdown values
	   */
	  $rootScope.initializeViewBulkTestRulesController = function() {
		  rulesServices.getAppsListData().then(function(response){			
			  if (response.data != null) {
				 $scope.appData =  response.data.ruleApps;				 
			  }
	      });
	  }; 
	 
	 
 /**
   * This method is used to get FamilyData based on application id
   */ 	 
   $scope.getFamilyDataBasedOnAppId = function(appId) {
	    rulesServices.getRuleFamilysByAppId(appId).then(function(response){	 
			  if (response.data != null){
				  $scope.rulesData.rulesFamilyData = response.data.rule_families;
			  }
	      });
		  
	  };

  /**
    * By using Family Id we get the Rule Group Data
    */
   $scope.changeRuleFamily = function(familyId){
	   $scope.selectedFamilyId = familyId;
	   $scope.getRuleGroupData(familyId);	   
   };
   $scope.getRuleGroupData = function(familyId){
	   rulesServices.groupDetails(familyId).then(function(response){
			 if (response != null && response.data != null){
				 $scope.rulesData.ruleGroupData = response.data.rule_groups;
			 }
	   });
   };
   
   /**
    * By using Group Id we get the Rule Name Data
    */
   $scope.changeRuleGroup = function(groupId){
	   $scope.selectedRuleGroupId = groupId;
	   $scope.getRuleName(groupId);
   };
   
   $scope.getRuleName = function(groupId){
	   rulesServices.rulesByGroupId(groupId).then(function(response){		   
			 if (response != null && response.data != null) {
				 $scope.rulesData.ruleNameData = response.data.rules;				 
			 }
	   });
   };
   
   /**
    * This method to get the Rule Id 
    **/
   $scope.changeRule = function(ruleId){
	   $scope.selectedRuleId = ruleId;
   };
   
   $scope.getFile = function () {
       $scope.progress = 0;
       fileReader.readAsDataUrl($scope.file, $scope)
                     .then(function(result) {
                         $scope.fileUpload = result;
                     });
     
   };

   /**
   * This method to Test Rule with all Expressions
   */  
	$scope.test = function() {
		 var bulkRuleTestJson= {
				    "app_id":null,
		    		"rule_family_id":null,
		    		"rule_group_id":null,
		    		"rule_id":null,
		  	        "file_upload":null
		  	};		 
		
		 if ($scope.fileUpload == null || $scope.fileUpload == undefined) {
			 dialogs.error("ERROR","Please Select a File",{size:'md'});			 
			return false;
		}else {
			bulkRuleTestJson.file_upload =$scope.fileUpload;
		}
		if ($scope.appId == null || $scope.appId == undefined) {
			 dialogs.error("ERROR","Please select the application",{size:'md'});			 
			return false;
		}else {
			bulkRuleTestJson.app_id =$scope.appId;
		}
		if ($scope.rulesData.selectedRuleFamilyId == null || $scope.rulesData.selectedRuleFamilyId == undefined) {
			 dialogs.error("ERROR","Please select the family",{size:'md'});			 
			return false;
		}else {
			 bulkRuleTestJson.rule_family_id = $scope.rulesData.selectedRuleFamilyId;
		}
		  
		if ($scope.selectedFamilyId != null && $scope.selectedFamilyId != undefined) {	
			if (($scope.selectedRuleGroupId != null && $scope.selectedRuleGroupId != undefined) && ($scope.selectedRuleId != null && $scope.selectedRuleId != undefined)){
				bulkRuleTestJson.rule_id = $scope.selectedRuleId;
				
			} 
			if ($scope.selectedRuleGroupId != null && $scope.selectedRuleGroupId != undefined) {
				bulkRuleTestJson.rule_group_id = $scope.selectedRuleGroupId;
				
			} else {
				bulkRuleTestJson.rule_family_id = $scope.selectedFamilyId;
				
			}
	    }			
		$scope.rulesAppliedJson = {
				
				"rules_applied" : {
					"rule_messages" : [{
                	    "message" :"test rules1",
                	    "expressions" :"MATCHANY(A)ORMATCH(B)"
                  },
                  {
              	    "message" :"test rules2",
              	    "expressions" :"MATCHANY(D)ORMATCH(C)"
                }]
				}
					
		};
	    $scope.rulesNtAppliedJson = {
				
				"rules_not_applied" : {
					"rule_messages" : [{
                	    "message" :"test rules1"
                  },
                  {
              	    "message" :"test rules2"
                }]
				}
					
		};
		
		
		
		alert(JSON.stringify($scope.bulkRuleJson));
	   /*rulesServices.bulkTestRule(bulkRuleTestJson).then(function(response){
		
       });	*/		
	};
	 
  });