angular
		.module('smiApp')
		.controller('OpenFacebookCasesController',function($scope, $state, $modal, OpenfacebookCaseService,$rootScope,$log,dialogs) {
					$scope.isSelect = true;
					$scope.ischecked = false;
					$scope.categoryId = 0;
					$scope.priorityId = 0;
					account_type = 1;
					$scope.accountType = account_type.toString();
					$scope.socialMediaAccountId = 0;
					$scope.moreOptions = [ { id : 1, name : 'Group Selected Cases'}, 
					                       { id : 2, name : 'Assign Selected Cases'}, 
					                       { id : 3, name : 'Append Notes'}, 
					                       { id : 4, name : 'Mark As Spam'} ];
					$scope.fbCases = [];
					$rootScope.initializeOpenFacebookCasesController = function() {
						OpenfacebookCaseService.getOpenCases(account_type).then(function(response) {
									$scope.fbCases = response.data.cmfCaseBO;
								});
						$scope.getCategories();
					};
							$scope.getCategories = function() {
								OpenfacebookCaseService.getStaticData().then(function(response) {
													$scope.categories = response.data.cmfCaseCategoryBOList;
													$scope.priorities = response.data.cmfCasePriorityBOList;
													for ( var i = 0; i < response.data.cmfCasePriorityBOList.length; i++) {
														var obj = response.data.cmfCasePriorityBOList[i];
														obj.priorityImage = (response.data.cmfCasePriorityBOList[i].priority_name).charAt(0);
													}
													$scope.accounts = response.data.socialMediaAccountsList;
												});
							}, 
							$scope.getOpenCasesByAccountCategory = function(categoryId) {
								$scope.categoryId = categoryId.toString();
								$scope.getOpenCases();
							}, 
							$scope.getOpenCasesByPriority = function(priorityId) {
								$scope.priorityId = priorityId.toString();
								$scope.getOpenCases();
							};
					$scope.getOpenCasesByAccount = function(socialMediaAccountId) {
						$scope.socialMediaAccountId = socialMediaAccountId.toString();
						$scope.getOpenCases();
					};
					$scope.getOpenCases = function() {
						OpenfacebookCaseService.getOpenCasesByCriteria($scope.accountType, $scope.categoryId,$scope.priorityId, $scope.socialMediaAccountId).then(function(response) {
									$scope.fbCases = response.data.cmfCaseBO;
								});
					};
					$scope.getAllPriorities = function() {
						OpenfacebookCaseService.getOpenCasesByCriteria($scope.accountType, $scope.categoryId, "All",$scope.socialMediaAccountId).then(function(response) {
									$scope.fbCases = response.data.cmfCaseBO;
								});
					};
					$scope.getAllCategories = function() {
						OpenfacebookCaseService.getOpenCasesByCriteria($scope.accountType, "All", $scope.priorityId,$scope.socialMediaAccountId).then(function(response) {
									$scope.fbCases = response.data.cmfCaseBO;
								});
					};
					$scope.getAllAccounts = function() {
						OpenfacebookCaseService.getOpenCasesByCriteria($scope.accountType, $scope.categoryId,$scope.priorityId, "All").then(function(response) {
									$scope.fbCases = response.data.cmfCaseBO;
								});
					};
					$scope.highliteCategory = null;
					$scope.sethighliteCategory = function(index) {
						$scope.highliteCategory = index;
					};
					$scope.highlitePriority = null;
					$scope.sethighlitePriority = function(index) {
						$scope.highlitePriority = index;
					};
					$scope.highliteAccount = null;
					$scope.sethighliteAccount = function(index) {
						$scope.highliteAccount = index;
					};
					$scope.refreshOpenCategories = function() {
						$rootScope.initializeOpenFacebookCasesController();
					}, 
					$scope.caseDetails = function(cases) {
						var params = {};
						if (cases != null) {
							params.case_id = cases.case_id;
						}
						$state.go('viewindividualcasedetails', params);
						$rootScope.customerId = cases.cmfCustomerBO.customerId;
						$rootScope.caseid = cases.case_id;
					};

					var selectedCases = [];
					$scope.getSelectedValue = function(id) {
						$scope.isSelect = false;
						selectedCases.push(id);
						
					};
					

					$scope.getOption = function(id) {

						if (id == 2) {
							var modalInstance = $modal.open({
								templateUrl : 'assignCase.html',
								controller : 'AddassignCaseController',
							
							 resolve: {
							        items: function () {
							        	 var obj = {};
						      		     obj.assignto= $scope.assignto;
						      		     obj.reasons= $scope.reasons;
						      		     obj.selectedCases=selectedCases;
							             return obj;
							       }
							      }
							});


						} else if (id == 3) {
							var modalInstance = $modal.open({
								templateUrl : 'appendNote.html',
								controller : 'AddAppendNoteController',
								resolve: {
									 selectedCases: function () {
						    	        	 var obj = {};
							        		   obj.selectedCases=selectedCases;
								        	   return obj;
						    	       }
						    	      }
							});

						}
					};
					 $scope.Search = '';
					    $scope.search = function (user) {
					      var query = $scope.Search;
					      var fullname = user.cmfCustomerBO.firstName+ ' ' + user.cmfCustomerBO.lastName;
					      if (fullname.indexOf(query) != -1) {
					        return true;
					      }
					      return false;
					    };
}).controller('AddassignCaseController',  function ($scope, $modalInstance,$rootScope,OpenfacebookCaseService,items ) {
					
					$scope.getAssignedUserId= function(user) {
						$scope.user=user
					};
					OpenfacebookCaseService.getAllUsers().then(function(response) {
						$scope.users = response.data.cmfCasesUsers;
						});
					
					    $scope.ok = function () {
					    	var requestData = {
			    				      "user_name":$scope.assignto,
			    				      "reason_assign": $scope.reasons,
			    				      "Case":[]
			    				};
					    	  requestData.Case[i] = {};
					    	  for(var i =0;i<items.selectedCases.length;i++)
					    	  {
					    		  requestData.Case[i] = items.selectedCases[i];
					    	  };
						    	OpenfacebookCaseService.saveSelectedCases(requestData).then(function(result){
						    		
						    	});
						    	//$state.go('openfacebookcases');
					    	 
						    	$scope.close = function () {
									$modalInstance.dismiss('close');
							    };
					    };
					  
}).controller('AddAppendNoteController', function($scope,$modal,$state,$modalInstance,selectedCases,OpenfacebookCaseService) {
						
						$scope.saveAppendNotes = function () {
							
					    	var saveAppendNotesJSON = {
			    				      "note_description": $scope.appendnotesfb,
			    				      "cmfcase":[]
			    			};
					    	saveAppendNotesJSON.cmfcase[i] = {};
					    	for(var i =0;i<selectedCases.selectedCases.length;i++) {
					    		saveAppendNotesJSON.cmfcase[i] = selectedCases.selectedCases[i];
					    	};

					    	
					    	OpenfacebookCaseService.saveAppendNotes(saveAppendNotesJSON).then(function(result){
					    		
					    	});
					    	 $modalInstance.close();
					    };
					  
						$scope.close = function () {
							$modalInstance.dismiss('close');
					    };
					});


